class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> s = {1,2,3,4,5,6,7,8,9}; // use numbers 1-9
        vector<bool> mask(9, false);

        // set the last k elements to true
        fill(mask.end() - k, mask.end(), true);

        do {
            vector<int> comb;
            for (int i = 0; i < 9; i++) {
                if (mask[i])
                    comb.push_back(s[i]);
            }

            int sum = 0;
            for (int c : comb)
                sum += c;

            if (sum == n)
                ans.push_back(comb);

        } while (next_permutation(mask.begin(), mask.end()));

        return ans;
    }
};
