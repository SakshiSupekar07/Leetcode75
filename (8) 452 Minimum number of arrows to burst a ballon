class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        if (points.empty()) return 0;

        // Sort by end position of the balloon
        sort(points.begin(), points.end(), [](const vector<int>& a, const vector<int>& b) {
            return a[1] < b[1];
        });

        int arrcnt = 1;  // At least one arrow is needed
        int arrpos = points[0][1];

        for (int i = 1; i < points.size(); i++) {
            if (points[i][0] > arrpos) {
                arrcnt++;
                arrpos = points[i][1];
            }
        }

        return arrcnt;
    }
};
